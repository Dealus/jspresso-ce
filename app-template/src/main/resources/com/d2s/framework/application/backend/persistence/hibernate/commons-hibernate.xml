<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!--
  Hibernate root application context for the D2S framework.
-->
<beans default-lazy-init="true">

  <bean id="applicationSession" parent="abstractApplicationSession"
    class="com.d2s.framework.application.backend.session.hibernate.HibernateAwareApplicationSession">
    <property name="hibernateTemplate" ref="hibernateTemplate" />
  </bean>

  <!--
    Hibernate persisters configuration.
  -->
  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass"
      value="com.d2s.framework.model.persistence.hibernate.entity.persister.EntityProxySingleTableEntityPersister" />
    <property name="targetMethod">
      <value>setEntityFactory</value>
    </property>
    <property name="arguments">
      <list>
        <ref bean="entityFactory" />
      </list>
    </property>
  </bean>

  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass"
      value="com.d2s.framework.model.persistence.hibernate.entity.persister.EntityProxyJoinedSubclassEntityPersister" />
    <property name="targetMethod">
      <value>setEntityFactory</value>
    </property>
    <property name="arguments">
      <list>
        <ref bean="entityFactory" />
      </list>
    </property>
  </bean>

  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass"
      value="com.d2s.framework.model.persistence.hibernate.entity.persister.EntityProxyUnionSubclassEntityPersister" />
    <property name="targetMethod">
      <value>setEntityFactory</value>
    </property>
    <property name="arguments">
      <list>
        <ref bean="entityFactory" />
      </list>
    </property>
  </bean>

  <bean id="proxyEntityInterceptor"
    class="com.d2s.framework.application.backend.persistence.hibernate.ApplicationSessionAwareEntityProxyInterceptor">
    <property name="entityFactory" ref="entityFactory" />
    <property name="applicationSession" ref="applicationSession" />
  </bean>

  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="org.hsqldb.jdbcDriver" />
    <property name="url" value="jdbc:hsqldb:." />
    <property name="username" value="sa" />
    <property name="password" value="" />
  </bean>

  <bean id="hibernateSessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.query.substitutions">true 1, false 0, yes 'Y', no 'N'</prop>
        <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
        <prop key="hibernate.order_updates">true</prop>
        <prop key="hibernate.max_fetch_depth">1</prop>
        <prop key="hibernate.default_batch_fetch_size">8</prop>
        <prop key="hibernate.jdbc.batch_versioned_data">true</prop>
        <prop key="hibernate.jdbc.use_streams_for_binary">true</prop>
        <prop key="hibernate.cache.region_prefix">hibernate.test</prop>
        <prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
        <prop key="hibernate.jdbc.use_streams_for_binary">true</prop>
        <prop key="hibernate.hbm2ddl.auto">create</prop>
      </props>
    </property>
    <property name="entityInterceptor" ref="proxyEntityInterceptor" />
  </bean>

  <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
    <property name="sessionFactory" ref="hibernateSessionFactory" />
  </bean>

  <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="hibernateSessionFactory" />
  </bean>

  <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
    <property name="transactionManager" ref="transactionManager" />
  </bean>

  <!--
    Hibernate root action beans.
  -->
  <bean abstract="true" id="abstractHibernateBackAction" parent="abstractBackAction"
    class="com.d2s.framework.application.backend.action.persistence.hibernate.AbstractHibernateAction">
    <property name="hibernateTemplate" ref="hibernateTemplate" />
    <property name="transactionTemplate" ref="transactionTemplate" />
  </bean>

  <bean id="queryEntitiesBackAction" parent="abstractHibernateBackAction"
    class="com.d2s.framework.application.backend.action.persistence.hibernate.QueryEntitiesAction">
  </bean>
</beans>

