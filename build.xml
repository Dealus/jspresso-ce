<?xml version="1.0"?>

<project default="doc">

	<property file="build.properties" />

	<property name="doc.reference.dir" value="doc/reference" />
	<property name="doc.reference.css.dir" value="${doc.reference.dir}/css" />
	<property name="doc.reference.src.dir" value="${doc.reference.dir}/src" />
	<property name="doc.reference.images.dir"
	          value="${doc.reference.src.dir}/images" />
	<property name="doc.reference.target.dir"
	          value="${doc.reference.dir}/target" />
	<property name="html.xsl" value="${docbook.xsl.home}/html/chunk.xsl" />
	<property name="fo.xsl" value="${docbook.xsl.home}/fo/docbook.xsl" />
	<property name="xml.reference.target.dir"
	          value="${doc.reference.target.dir}/xml" />
	<property name="html.reference.target.dir"
	          value="${doc.reference.target.dir}/html" />
	<property name="fo.reference.target.dir"
	          value="${doc.reference.target.dir}/fo" />
	<property name="pdf.reference.target.dir"
	          value="${doc.reference.target.dir}/pdf" />

	<path id="xcluder.classpath">
		<fileset dir="${xcluder.home}">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${xalan.home}">
			<include name="xercesImpl.jar" />
		</fileset>
	</path>

	<path id="xalan.classpath">
		<fileset dir="${xalan.home}">
			<include name="xalan.jar" />
			<include name="xercesImpl.jar" />
		</fileset>
		<fileset dir="${docbook.xsl.home}/extensions">
			<include name="xalan*.jar" />
		</fileset>
	</path>

	<taskdef name="xclude" classname="gr.abiss.xcluder.XercesXcluder">
		<classpath refid="xcluder.classpath" />
	</taskdef>

	<taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop">
		<classpath>
			<fileset dir="${fop.home}/lib">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${fop.home}/build">
				<include name="fop.jar" />
				<include name="fop-hyph.jar" />
			</fileset>
		</classpath>
	</taskdef>

	<target name="clean" description="Cleans up generated files.">
		<delete dir="${doc.reference.target.dir}" />
	</target>

	<target name="mktarget">
		<mkdir dir="${xml.reference.target.dir}" />
		<mkdir dir="${html.reference.target.dir}" />
		<mkdir dir="${fo.reference.target.dir}" />
		<mkdir dir="${pdf.reference.target.dir}" />
	</target>

	<target name="xinclude">
		<replace dir="${doc.reference.src.dir}"
		         token="www.w3.org/2001/XInclude"
		         value="www.w3.org/2003/XInclude">
			<include name="**/*.xml" />
		</replace>
		<xclude destdir="${xml.reference.target.dir}" encoding="UTF-8" indent="yes">
			<fileset dir="${doc.reference.src.dir}">
				<include name="**/reference-guide.xml" />
			</fileset>
		</xclude>
		<copy todir="${xml.reference.target.dir}/images">
			<fileset dir="${doc.reference.images.dir}" includes="**/*.*" />
		</copy>
	</target>

	<target name="build-html"
	        depends="mktarget, xinclude"
	        description="Generates HTML files from DocBook XML">
		<copy todir="${html.reference.target.dir}/css">
			<fileset dir="${doc.reference.css.dir}" includes="**/*.css" />
		</copy>
		<copy todir="${html.reference.target.dir}/images">
			<fileset dir="${doc.reference.images.dir}" includes="**/*.*" />
		</copy>
		<xslt style="${html.xsl}"
		      extension=".html"
		      basedir="${xml.reference.target.dir}"
		      destdir="${html.reference.target.dir}">
			<classpath refid="xalan.classpath" />
			<param name="html.stylesheet" expression="../css/docbook.css" />
			<param name="graphicsize.extension" expression="1" />
			<param name="use.extensions" expression="1" />
			<param name="ignore.image.scaling" expression="1" />
			<param name="formal.title.placement" expression="figure after" />
			<param name="generate.index" expression="1" />
			<include name="**/reference-guide.xml" />
		</xslt>
	</target>

	<target name="build-fo"
	        depends="mktarget, xinclude"
	        description="Generates FO files from DocBook XML">
		<xslt style="${fo.xsl}"
		      extension=".fo"
		      basedir="${xml.reference.target.dir}"
		      destdir="${fo.reference.target.dir}">
			<classpath refid="xalan.classpath" />
			<param name="paper.type" expression="A4" />
			<param name="fop1.extensions" expression="1" />
			<param name="graphicsize.extension" expression="1" />
			<param name="use.extensions" expression="1" />
			<param name="formal.title.placement" expression="figure after" />
			<param name="generate.index" expression="1" />
			<param name="ulink.show" expression="0" />
			<include name="**/reference-guide.xml" />
		</xslt>
		<replaceregexp match="\.\.\/images\/(\S*)\.png"
		               replace="\.\.\/images\/\1.svg"
		               flags="g"
		               byline="true">
			<fileset dir="${fo.reference.target.dir}" includes="**/*.fo" />
		</replaceregexp>
		<copy todir="${fo.reference.target.dir}/images">
			<fileset dir="${doc.reference.images.dir}" includes="**/*.*" />
		</copy>
	</target>

	<target name="build-pdf"
	        depends="mktarget"
	        description="Generates PDF files from FO files">
		<copy todir="${pdf.reference.target.dir}">
			<fileset dir="${fo.reference.target.dir}" excludes="**/images **/*.*" />
		</copy>
		<fop format="application/pdf"
		     outdir="${pdf.reference.target.dir}"
		     relativebase="true">
			<fileset dir="${fo.reference.target.dir}">
				<include name="**/*.fo" />
			</fileset>
		</fop>
	</target>

	<target name="doc" depends="clean,build-html,build-fo,build-pdf" />

	<target name="test">
	</target>
</project>