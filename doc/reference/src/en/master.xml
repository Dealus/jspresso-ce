<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3b2/docbookx.dtd">
<book lang="en" revision="1.0">
  <bookinfo>
    <title>D2S : The <trademark>Design2See</trademark> Framework</title>

    <subtitle><trademark>D2S</trademark> Reference Manual</subtitle>

    <releaseinfo>1.0</releaseinfo>

    <abstract>
      <para>This document is a reference manual for the
      <trademark>Design2See</trademark> (<trademark>D2S</trademark>)
      framework. It deals with all the building blocks of a
      <trademark>D2S</trademark> application.</para>
    </abstract>
  </bookinfo>

  <toc></toc>

  <preface id="preface">
    <title>Preface</title>

    <para>Software development requires many different skills. This is even
    more true when you have to deal with a distributed business application
    for which you have to get expertise on :</para>

    <itemizedlist>
      <listitem>
        <para>Database design and performance (schema design, data access
        optimisation, data integrity, ...)</para>
      </listitem>

      <listitem>
        <para>Gui design and binding on domain model (views, flow, actions,
        ...)</para>
      </listitem>

      <listitem>
        <para>N-tier architecture design for distributed applications
        (frontend deployment, bandwidth consumption, network round trips,
        ...)</para>
      </listitem>

      <listitem>
        <para>System scalability and robustness (fail over, load-balancing,
        ...)</para>
      </listitem>

      <listitem>
        <para>Software architecture and best practices (design patterns,
        security, manageability, logging, low coupling, separation of
        concerns, ...)</para>
      </listitem>

      <listitem>
        <para>Up-to-date technology building blocks (stay with standards,
        leverage on existing components, easy switch between equivalent
        components, ...)</para>
      </listitem>
    </itemizedlist>

    <para>Whenever one of these skills is not efficiently addressed, the
    software may simply never become available or may not meet the promised
    quality or exploitability required standards. It surely leads to huge
    delays on the schedule and bad ROI.</para>

    <para>Big software vendors have tried to address this situation more or
    less succesfully by providing end to end CASE tools, but there are
    well-known drawbacks to this approach. Some of them are :</para>

    <itemizedlist>
      <listitem>
        <para>High license fees for development and often for runtime</para>
      </listitem>

      <listitem>
        <para>End-to-end proprietary solutions locking the software and thus
        the customer into the chosen technology and tools</para>
      </listitem>

      <listitem>
        <para>The resulting software is often completely opaque and rarely
        intergrates seamlessly in the overall information
        infrastructure</para>
      </listitem>
    </itemizedlist>

    <para>This is with these ideas in mind that the <trademark>D2S</trademark>
    application framework was developed. To get an idea of what a software
    framework is and what it is not, please, refer to the following <ulink
    url="http://en.wikipedia.org/wiki/Software_framework">link</ulink></para>
  </preface>

  <xi:include href="chapter1.xml" xmlns:xi="http://www.w3.org/2001/XInclude"
              xpointer="element(/1)" />

  <xi:include href="chapter2.xml" xmlns:xi="http://www.w3.org/2001/XInclude"
              xpointer="element(/1)" />

  <xi:include href="chapter3.xml" xmlns:xi="http://www.w3.org/2001/XInclude"
              xpointer="element(/1)" />

  <xi:include href="chapter4.xml" xmlns:xi="http://www.w3.org/2001/XInclude"
              xpointer="element(/1)" />

  <xi:include href="chapter5.xml" xmlns:xi="http://www.w3.org/2001/XInclude"
              xpointer="element(/1)" />

  <xi:include href="chapter6.xml" xmlns:xi="http://www.w3.org/2001/XInclude"
              xpointer="element(/1)" />
</book>