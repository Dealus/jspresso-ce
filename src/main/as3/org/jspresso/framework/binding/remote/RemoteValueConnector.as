/**
 * Generated by Gas3 v1.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERRIDDEN EACH TIME YOU USE
 * THE GENERATOR. CHANGE INSTEAD THE INHERITED CLASS (RemoteValueConnector.as).
 */

package org.jspresso.framework.binding.remote {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import flash.utils.IExternalizable;
    
    import org.jspresso.framework.binding.IValueConnector;
    import org.jspresso.framework.util.remote.IRemoteClientPeer;

    [Bindable]
    [RemoteClass(alias="org.jspresso.framework.binding.remote.RemoteValueConnector")]
    public class RemoteValueConnector implements IValueConnector, IExternalizable, IRemoteClientPeer {

        private var _connectorValue:Object;
        private var _id:String;
        private var _readable:Boolean;
        private var _uid:String;
        private var _writable:Boolean;

        public function set connectorValue(value:Object):void {
            _connectorValue = value;
        }
        public function get connectorValue():Object {
            return _connectorValue;
        }

        public function set id(value:String):void {
            _id = value;
        }
        public function get id():String {
            return _id;
        }

        public function set readable(value:Boolean):void {
            _readable = value;
        }
        public function get readable():Boolean {
            return _readable;
        }

        public function set uid(value:String):void {
            _uid = value;
        }
        public function get uid():String {
            return _uid;
        }

        public function set writable(value:Boolean):void {
            _writable = value;
        }
        public function get writable():Boolean {
            return _writable;
        }

        public function readExternal(input:IDataInput):void {
            _connectorValue = input.readObject() as Object;
            _id = input.readObject() as String;
            _readable = input.readObject() as Boolean;
            _uid = input.readObject() as String;
            _writable = input.readObject() as Boolean;
        }

        public function writeExternal(output:IDataOutput):void {
            output.writeObject(_connectorValue);
            output.writeObject(_id);
            output.writeObject(_readable);
            output.writeObject(_uid);
            output.writeObject(_writable);
        }
    }
}