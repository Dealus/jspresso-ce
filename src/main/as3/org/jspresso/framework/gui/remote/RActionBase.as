/**
 * Generated by Gas3 v1.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERRIDDEN EACH TIME YOU USE
 * THE GENERATOR. CHANGE INSTEAD THE INHERITED CLASS (RAction.as).
 */

package org.jspresso.framework.gui.remote {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import org.jspresso.framework.util.remote.RemoteServerPeer;

    [Bindable]
    public class RActionBase extends RemoteServerPeer {

        private var _description:String;
        private var _enabled:Boolean;
        private var _icon:RIcon;
        private var _mnemonicAsString:String;
        private var _name:String;

        public function set description(value:String):void {
            _description = value;
        }
        public function get description():String {
            return _description;
        }

        public function set enabled(value:Boolean):void {
            _enabled = value;
        }
        public function get enabled():Boolean {
            return _enabled;
        }

        public function set icon(value:RIcon):void {
            _icon = value;
        }
        public function get icon():RIcon {
            return _icon;
        }

        public function set mnemonicAsString(value:String):void {
            _mnemonicAsString = value;
        }
        public function get mnemonicAsString():String {
            return _mnemonicAsString;
        }

        public function set name(value:String):void {
            _name = value;
        }
        public function get name():String {
            return _name;
        }

        override public function readExternal(input:IDataInput):void {
            super.readExternal(input);
            _description = input.readObject() as String;
            _enabled = input.readObject() as Boolean;
            _icon = input.readObject() as RIcon;
            _mnemonicAsString = input.readObject() as String;
            _name = input.readObject() as String;
        }

        override public function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            output.writeObject(_description);
            output.writeObject(_enabled);
            output.writeObject(_icon);
            output.writeObject(_mnemonicAsString);
            output.writeObject(_name);
        }
    }
}