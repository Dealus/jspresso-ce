/**
 * Generated by Gas3 v1.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERRIDDEN EACH TIME YOU USE
 * THE GENERATOR. CHANGE INSTEAD THE INHERITED CLASS (BasicStringPropertyDescriptor.as).
 */

package org.jspresso.framework.model.descriptor.basic {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import org.jspresso.framework.model.descriptor.IStringPropertyDescriptor;

    [Bindable]
    public class BasicStringPropertyDescriptorBase extends BasicScalarPropertyDescriptor implements IStringPropertyDescriptor {

        private var _maxLength:Number;
        private var _regexpPattern:String;
        private var _regexpPatternSample:String;
        private var _upperCase:Boolean;

        public function set maxLength(value:Number):void {
            _maxLength = value;
        }
        public function get maxLength():Number {
            return _maxLength;
        }

        public function set regexpPattern(value:String):void {
            _regexpPattern = value;
        }
        public function get regexpPattern():String {
            return _regexpPattern;
        }

        public function set regexpPatternSample(value:String):void {
            _regexpPatternSample = value;
        }
        public function get regexpPatternSample():String {
            return _regexpPatternSample;
        }

        public function set upperCase(value:Boolean):void {
            _upperCase = value;
        }
        public function get upperCase():Boolean {
            return _upperCase;
        }

        override public function readExternal(input:IDataInput):void {
            super.readExternal(input);
            _maxLength = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _regexpPattern = input.readObject() as String;
            _regexpPatternSample = input.readObject() as String;
            _upperCase = input.readObject() as Boolean;
        }

        override public function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            output.writeObject(_maxLength);
            output.writeObject(_regexpPattern);
            output.writeObject(_regexpPatternSample);
            output.writeObject(_upperCase);
        }
    }
}