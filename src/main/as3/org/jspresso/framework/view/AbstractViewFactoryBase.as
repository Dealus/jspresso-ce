/**
 * Generated by Gas3 v1.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERRIDDEN EACH TIME YOU USE
 * THE GENERATOR. CHANGE INSTEAD THE INHERITED CLASS (AbstractViewFactory.as).
 */

package org.jspresso.framework.view {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import flash.utils.IExternalizable;
    import org.jspresso.framework.binding.IConfigurableConnectorFactory;
    import org.jspresso.framework.binding.IMvcBinder;
    import org.jspresso.framework.binding.masterdetail.IModelCascadingBinder;
    import org.jspresso.framework.util.i18n.ITranslationProvider;
    import org.jspresso.framework.view.action.IDisplayableAction;

    [Bindable]
    public class AbstractViewFactoryBase implements IExternalizable, IViewFactory {

        private var _actionFactory:IActionFactory;
        private var _binaryPropertyInfoAction:IDisplayableAction;
        private var _connectorFactory:IConfigurableConnectorFactory;
        private var _iconFactory:IIconFactory;
        private var _lovAction:IDisplayableAction;
        private var _modelCascadingBinder:IModelCascadingBinder;
        private var _mvcBinder:IMvcBinder;
        private var _openFileAsBinaryPropertyAction:IDisplayableAction;
        private var _resetPropertyAction:IDisplayableAction;
        private var _saveBinaryPropertyAsFileAction:IDisplayableAction;
        private var _translationProvider:ITranslationProvider;

        public function set actionFactory(value:IActionFactory):void {
            _actionFactory = value;
        }
        public function get actionFactory():IActionFactory {
            return _actionFactory;
        }

        public function set binaryPropertyInfoAction(value:IDisplayableAction):void {
            _binaryPropertyInfoAction = value;
        }

        public function set connectorFactory(value:IConfigurableConnectorFactory):void {
            _connectorFactory = value;
        }

        public function set iconFactory(value:IIconFactory):void {
            _iconFactory = value;
        }
        public function get iconFactory():IIconFactory {
            return _iconFactory;
        }

        public function set lovAction(value:IDisplayableAction):void {
            _lovAction = value;
        }

        public function set modelCascadingBinder(value:IModelCascadingBinder):void {
            _modelCascadingBinder = value;
        }

        public function set mvcBinder(value:IMvcBinder):void {
            _mvcBinder = value;
        }

        public function set openFileAsBinaryPropertyAction(value:IDisplayableAction):void {
            _openFileAsBinaryPropertyAction = value;
        }

        public function set resetPropertyAction(value:IDisplayableAction):void {
            _resetPropertyAction = value;
        }

        public function set saveBinaryPropertyAsFileAction(value:IDisplayableAction):void {
            _saveBinaryPropertyAsFileAction = value;
        }

        public function set translationProvider(value:ITranslationProvider):void {
            _translationProvider = value;
        }

        public function readExternal(input:IDataInput):void {
            _actionFactory = input.readObject() as IActionFactory;
            _binaryPropertyInfoAction = input.readObject() as IDisplayableAction;
            _connectorFactory = input.readObject() as IConfigurableConnectorFactory;
            _iconFactory = input.readObject() as IIconFactory;
            _lovAction = input.readObject() as IDisplayableAction;
            _modelCascadingBinder = input.readObject() as IModelCascadingBinder;
            _mvcBinder = input.readObject() as IMvcBinder;
            _openFileAsBinaryPropertyAction = input.readObject() as IDisplayableAction;
            _resetPropertyAction = input.readObject() as IDisplayableAction;
            _saveBinaryPropertyAsFileAction = input.readObject() as IDisplayableAction;
            _translationProvider = input.readObject() as ITranslationProvider;
        }

        public function writeExternal(output:IDataOutput):void {
            output.writeObject(_actionFactory);
            output.writeObject(_binaryPropertyInfoAction);
            output.writeObject(_connectorFactory);
            output.writeObject(_iconFactory);
            output.writeObject(_lovAction);
            output.writeObject(_modelCascadingBinder);
            output.writeObject(_mvcBinder);
            output.writeObject(_openFileAsBinaryPropertyAction);
            output.writeObject(_resetPropertyAction);
            output.writeObject(_saveBinaryPropertyAsFileAction);
            output.writeObject(_translationProvider);
        }
    }
}