/**
 * Generated by Gas3 v1.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERRIDDEN EACH TIME YOU USE
 * THE GENERATOR. CHANGE INSTEAD THE INHERITED CLASS (BasicView.as).
 */

package org.jspresso.framework.view {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import flash.utils.IExternalizable;
    import org.jspresso.framework.binding.IValueConnector;
    import org.jspresso.framework.view.descriptor.IViewDescriptor;

    [Bindable]
    public class BasicViewBase implements IExternalizable, IView {

        private var _connector:IValueConnector;
        private var _descriptor:IViewDescriptor;
        private var _parent:IView;
        private var _peer:Object;

        public function set connector(value:IValueConnector):void {
            _connector = value;
        }
        public function get connector():IValueConnector {
            return _connector;
        }

        public function set descriptor(value:IViewDescriptor):void {
            _descriptor = value;
        }
        public function get descriptor():IViewDescriptor {
            return _descriptor;
        }

        public function set parent(value:IView):void {
            _parent = value;
        }
        public function get parent():IView {
            return _parent;
        }

        public function set peer(value:Object):void {
            _peer = value;
        }
        public function get peer():Object {
            return _peer;
        }

        public function get view():IView {
            return null;
        }

        public function readExternal(input:IDataInput):void {
            _connector = input.readObject() as IValueConnector;
            _descriptor = input.readObject() as IViewDescriptor;
            _parent = input.readObject() as IView;
            _peer = input.readObject() as Object;
        }

        public function writeExternal(output:IDataOutput):void {
            output.writeObject(_connector);
            output.writeObject(_descriptor);
            output.writeObject(_parent);
            output.writeObject(_peer);
        }
    }
}