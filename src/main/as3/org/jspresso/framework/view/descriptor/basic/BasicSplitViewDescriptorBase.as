/**
 * Generated by Gas3 v1.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERRIDDEN EACH TIME YOU USE
 * THE GENERATOR. CHANGE INSTEAD THE INHERITED CLASS (BasicSplitViewDescriptor.as).
 */

package org.jspresso.framework.view.descriptor.basic {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import org.granite.util.Enum;
    import org.jspresso.framework.view.descriptor.EOrientation;
    import org.jspresso.framework.view.descriptor.ISplitViewDescriptor;
    import org.jspresso.framework.view.descriptor.IViewDescriptor;

    [Bindable]
    public class BasicSplitViewDescriptorBase extends BasicCompositeViewDescriptor implements ISplitViewDescriptor {

        private var _leftTopViewDescriptor:IViewDescriptor;
        private var _orientation:EOrientation;
        private var _rightBottomViewDescriptor:IViewDescriptor;

        public function set leftTopViewDescriptor(value:IViewDescriptor):void {
            _leftTopViewDescriptor = value;
        }
        public function get leftTopViewDescriptor():IViewDescriptor {
            return _leftTopViewDescriptor;
        }

        public function set orientation(value:EOrientation):void {
            _orientation = value;
        }
        public function get orientation():EOrientation {
            return _orientation;
        }

        public function set rightBottomViewDescriptor(value:IViewDescriptor):void {
            _rightBottomViewDescriptor = value;
        }
        public function get rightBottomViewDescriptor():IViewDescriptor {
            return _rightBottomViewDescriptor;
        }

        override public function readExternal(input:IDataInput):void {
            super.readExternal(input);
            _leftTopViewDescriptor = input.readObject() as IViewDescriptor;
            _orientation = Enum.readEnum(input) as EOrientation;
            _rightBottomViewDescriptor = input.readObject() as IViewDescriptor;
        }

        override public function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            output.writeObject(_leftTopViewDescriptor);
            output.writeObject(_orientation);
            output.writeObject(_rightBottomViewDescriptor);
        }
    }
}