class BasicCollectionPropertyDescriptor
!!!161159.java!!!	getCollectionDescriptor() : ICollectionDescriptor

    return getReferencedDescriptor();
!!!161287.java!!!	getModelType() : Class<?>

    return getReferencedDescriptor().getCollectionInterface();
!!!161415.java!!!	getOrderingProperties() : List<String>

    if (orderingProperties != null) {
      return orderingProperties;
    }
    if (getParentDescriptor() != null) {
      return ((ICollectionPropertyDescriptor<?>) getParentDescriptor())
          .getOrderingProperties();
    }
    return getReferencedDescriptor().getElementDescriptor()
        .getOrderingProperties();
!!!161543.java!!!	getReferencedDescriptor() : ICollectionDescriptor

    if (referencedDescriptor != null) {
      return referencedDescriptor;
    }
    if (getParentDescriptor() != null) {
      return ((ICollectionPropertyDescriptor<E>) getParentDescriptor())
          .getReferencedDescriptor();
    }
    return referencedDescriptor;
!!!161671.java!!!	isManyToMany() : boolean

    if (getReverseRelationEnd() != null) {
      // priory ty is given to the reverse relation end.
      return getReverseRelationEnd() instanceof ICollectionPropertyDescriptor;
    }
    if (manyToMany != null) {
      return manyToMany.booleanValue();
    }
    if (getParentDescriptor() != null) {
      return ((ICollectionPropertyDescriptor<?>) getParentDescriptor())
          .isManyToMany();
    }
    return false;
!!!161799.java!!!	postprocessAdder(inout component : Object, inout collection : Collection<?>, inout addedValue : Object) : void

    List<IPropertyIntegrityProcessor<?, ?>> processors = getIntegrityProcessors();
    if (processors == null) {
      return;
    }
    for (IPropertyIntegrityProcessor<?, ?> propertyIntegrityProcessor : processors) {
      ICollectionIntegrityProcessor<Object, Collection<?>> processor = 
        (ICollectionIntegrityProcessor<Object, Collection<?>>) propertyIntegrityProcessor;
      processor.postprocessAdderIntegrity(component, collection, addedValue);
    }
!!!161927.java!!!	postprocessRemover(inout component : Object, inout collection : Collection<?>, inout removedValue : Object) : void

    List<IPropertyIntegrityProcessor<?, ?>> processors = getIntegrityProcessors();
    if (processors == null) {
      return;
    }
    for (IPropertyIntegrityProcessor<?, ?> propertyIntegrityProcessor : processors) {
      ICollectionIntegrityProcessor<Object, Collection<?>> processor = 
        (ICollectionIntegrityProcessor<Object, Collection<?>>) propertyIntegrityProcessor;
      processor
          .postprocessRemoverIntegrity(component, collection, removedValue);
    }
!!!162055.java!!!	preprocessAdder(inout component : Object, inout collection : Collection<?>, inout addedValue : Object) : void

    List<IPropertyIntegrityProcessor<?, ?>> processors = getIntegrityProcessors();
    if (processors == null) {
      return;
    }
    for (IPropertyIntegrityProcessor<?, ?> propertyIntegrityProcessor : processors) {
      ICollectionIntegrityProcessor<Object, Collection<?>> processor = 
        (ICollectionIntegrityProcessor<Object, Collection<?>>) propertyIntegrityProcessor;
      processor.preprocessAdderIntegrity(component, collection, addedValue);
    }
!!!162183.java!!!	preprocessRemover(inout component : Object, inout collection : Collection<?>, inout removedValue : Object) : void

    List<IPropertyIntegrityProcessor<?, ?>> processors = getIntegrityProcessors();
    if (processors == null) {
      return;
    }
    for (IPropertyIntegrityProcessor<?, ?> propertyIntegrityProcessor : processors) {
      ICollectionIntegrityProcessor<Object, Collection<?>> processor = 
        (ICollectionIntegrityProcessor<Object, Collection<?>>) propertyIntegrityProcessor;
      processor.preprocessRemoverIntegrity(component, collection, removedValue);
    }
!!!162311.java!!!	setManyToMany(inout manyToMany : boolean) : void

    this.manyToMany = new Boolean(manyToMany);
!!!162439.java!!!	setOrderingProperties(inout orderingProperties : List<String>) : void

    this.orderingProperties = orderingProperties;
!!!162567.java!!!	setReferencedDescriptor(inout referencedDescriptor : ICollectionDescriptor) : void

    this.referencedDescriptor = referencedDescriptor;
!!!162695.java!!!	clone() : BasicCollectionPropertyDescriptor

    BasicCollectionPropertyDescriptor<E> clonedDescriptor = (BasicCollectionPropertyDescriptor<E>) super
        .clone();

    return clonedDescriptor;
!!!162823.java!!!	getDefaultComposition() : boolean

    if (getReverseRelationEnd() == null
        || getReverseRelationEnd() instanceof ICollectionPropertyDescriptor<?>) {
      return false;
    }
    return true;
