class BasicDurationPropertyDescriptor
!!!169991.java!!!	checkValueIntegrity(in component : Object, in propertyValue : Object) : void

    super.checkValueIntegrity(component, propertyValue);
    if (propertyValue != null && getMaxMillis() != null
        && ((Long) propertyValue).longValue() > getMaxMillis().longValue()) {
      IntegrityException ie = new IntegrityException("[" + getName()
          + "] value is too high on [" + component + "].") {

        private static final long serialVersionUID = 7459823123892198831L;

        @Override
        public String getI18nMessage(ITranslationProvider translationProvider,
            Locale locale) {
          StringBuffer boundsSpec = new StringBuffer();
          boundsSpec.append("x");
          if (getMaxMillis() != null) {
            boundsSpec.append(" <= ").append(getMaxMillis());
          }
          return translationProvider.getTranslation(
              "integrity.property.toobig", new Object[] {
                  getI18nName(translationProvider, locale), boundsSpec,
                  component}, locale);
        }

      };
      throw ie;
    }
!!!170119.java!!!	getMaxMillis() : Long

    if (maxMillis != null) {
      return maxMillis;
    }
    if (getParentDescriptor() != null) {
      return ((IDurationPropertyDescriptor) getParentDescriptor())
          .getMaxMillis();
    }
    return maxMillis;
!!!170247.java!!!	getModelType() : Class<?>

    return Long.class;
!!!170375.java!!!	setMaxMillis(in maxMillis : long) : void

    this.maxMillis = new Long(maxMillis);
!!!170503.java!!!	clone() : BasicDurationPropertyDescriptor

    BasicDurationPropertyDescriptor clonedDescriptor = (BasicDurationPropertyDescriptor) super
        .clone();

    return clonedDescriptor;
