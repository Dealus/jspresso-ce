class BasicQueryEntityDescriptor
!!!178183.java!!!	BasicQueryEntityDescriptor(inout entityDescriptor : IComponentDescriptor, inout queryContract : Class<? extends IEntity>)

    this.entityDescriptor = entityDescriptor;
    this.queryContract = queryContract;
!!!178311.java!!!	getComponentContract() : Class<? extends IEntity>

    return queryContract;
!!!178439.java!!!	getComponentDescriptor() : IComponentDescriptor

    return this;
!!!178567.java!!!	getDeclaredPropertyDescriptors() : IPropertyDescriptor

    Collection<IPropertyDescriptor> declaredPropertyDescriptors = entityDescriptor
        .getDeclaredPropertyDescriptors();
    declaredPropertyDescriptors.add(getQueriedEntitiesPropertyDescriptor());
    return declaredPropertyDescriptors;
!!!178695.java!!!	getDescription() : String

    return entityDescriptor.getDescription();
!!!178823.java!!!	getI18nDescription(inout translationProvider : ITranslationProvider, inout locale : Locale) : String

    return entityDescriptor.getI18nDescription(translationProvider, locale);
!!!178951.java!!!	getI18nName(inout translationProvider : ITranslationProvider, inout locale : Locale) : String

    return entityDescriptor.getI18nName(translationProvider, locale);
!!!179079.java!!!	getIconImageURL() : String

    return entityDescriptor.getIconImageURL();
!!!179207.java!!!	getLifecycleInterceptors() : ILifecycleInterceptor

    return entityDescriptor.getLifecycleInterceptors();
!!!179335.java!!!	getModelType() : Class<?>

    return queryContract;
!!!179463.java!!!	getName() : String

    return entityDescriptor.getName();
!!!179591.java!!!	getOrderingProperties() : List<String>

    return entityDescriptor.getOrderingProperties();
!!!179719.java!!!	getPropertyDescriptor(in propertyName : String) : IPropertyDescriptor

    if (IQueryEntity.QUERIED_ENTITIES.equals(propertyName)) {
      return getQueriedEntitiesPropertyDescriptor();
    }
    return entityDescriptor.getPropertyDescriptor(propertyName);
!!!179847.java!!!	getPropertyDescriptors() : IPropertyDescriptor

    Collection<IPropertyDescriptor> propertyDescriptors = entityDescriptor
        .getPropertyDescriptors();
    propertyDescriptors.add(getQueriedEntitiesPropertyDescriptor());
    return propertyDescriptors;
!!!179975.java!!!	getQueryableProperties() : List<String>

    return entityDescriptor.getQueryableProperties();
!!!180103.java!!!	getRenderedProperties() : List<String>

    return entityDescriptor.getRenderedProperties();
!!!180231.java!!!	getServiceContracts() : Collection<Class<?>>

    return entityDescriptor.getServiceContracts();
!!!180359.java!!!	getServiceDelegate(inout targetMethod : Method) : IComponentService

    return entityDescriptor.getServiceDelegate(targetMethod);
!!!180487.java!!!	getToStringProperty() : String

    return entityDescriptor.getToStringProperty();
!!!180615.java!!!	getUnclonedProperties() : Collection<String>

    return entityDescriptor.getUnclonedProperties();
!!!180743.java!!!	isComputed() : boolean

    return entityDescriptor.isComputed();
!!!180871.java!!!	isEntity() : boolean

    return entityDescriptor.isEntity();
!!!180999.java!!!	isPurelyAbstract() : boolean

    return entityDescriptor.isPurelyAbstract();
!!!181127.java!!!	getQueriedEntitiesPropertyDescriptor() : BasicCollectionPropertyDescriptor

    if (queriedEntitiesPropertyDescriptor == null) {
      BasicCollectionDescriptor<IEntity> queriedEntitiesCollectionDescriptor = new BasicCollectionDescriptor<IEntity>();
      queriedEntitiesCollectionDescriptor.setCollectionInterface(Set.class);
      queriedEntitiesCollectionDescriptor
          .setElementDescriptor(entityDescriptor);
      queriedEntitiesCollectionDescriptor
          .setName(IQueryEntity.QUERIED_ENTITIES);
      queriedEntitiesCollectionDescriptor
          .setDescription("queriedEntities.description");
      queriedEntitiesPropertyDescriptor = new BasicCollectionPropertyDescriptor<IEntity>();
      queriedEntitiesPropertyDescriptor.setName(IQueryEntity.QUERIED_ENTITIES);
      queriedEntitiesPropertyDescriptor
          .setReferencedDescriptor(queriedEntitiesCollectionDescriptor);
    }
    return queriedEntitiesPropertyDescriptor;
