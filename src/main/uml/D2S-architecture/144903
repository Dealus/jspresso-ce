format 48
"bean" // com::d2s::framework::util::bean
  revision 1
  modified_by 7 "Vincent"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_infonote default shadow default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default
  
  java_dir "com/d2s/framework/util/bean"
  java_package "com.d2s.framework.util.bean"
  classview 143495 "bean"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_infonote default shadow default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default
    class 197639 "AbstractPropertyChangeCapable"
      abstract visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
Abstract class to build a property change capable bean.
<p>
Copyright (c) 2005-2008 Vincent Vandenschrick. All rights reserved.
<p>

@version $LastChangedRevision: 959 $
@author Vincent Vandenschrick
"
      classrelation 217095 // <realization>
	relation 217095 -_-|>
	  a public
	    java "${type}"
	    classrelation_ref 217095 // <realization>
	  b parent class_ref 197767 // IPropertyChangeCapable
      end

      attribute 191239 "propertyChangeSupport"
	private explicit_type "PropertyChangeSupport"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	idl_decl ""
      end

      operation 390407 "AbstractPropertyChangeCapable"
	public explicit_return_type ""
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Constructs a new <code>AbstractPropertyChangeCapable</code> instance.
"
      end

      operation 390535 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" explicit_type "PropertyChangeListener"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
{@inheritDoc}
"
      end

      operation 390663 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param in name "propertyName" explicit_type "String"
	  param inout name "listener" explicit_type "PropertyChangeListener"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
{@inheritDoc}
"
      end

      operation 390791 "clone"
	public return_type class_ref 197639 // AbstractPropertyChangeCapable
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
${body}}
"
	java_annotation "@Override
"
	
	
	comment "
{@inheritDoc}
"
      end

      operation 390919 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" explicit_type "PropertyChangeListener"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
{@inheritDoc}
"
      end

      operation 391047 "removePropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param in name "propertyName" explicit_type "String"
	  param inout name "listener" explicit_type "PropertyChangeListener"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
{@inheritDoc}
"
      end

      operation 391175 "firePropertyChange"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "evt" explicit_type "PropertyChangeEvent"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
@param evt
           evt
@see java.beans.PropertyChangeSupport#firePropertyChange(java.beans.PropertyChangeEvent)
"
      end

      operation 391303 "firePropertyChange"
	protected explicit_return_type "void"
	nparams 3
	  param in name "propertyName" explicit_type "String"
	  param inout name "oldValue" explicit_type "boolean"
	  param inout name "newValue" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
@param propertyName
           propertyName
@param oldValue
           oldValue
@param newValue
           newValue
@see java.beans.PropertyChangeSupport#firePropertyChange(java.lang.String,
     boolean, boolean)
"
      end

      operation 391431 "firePropertyChange"
	protected explicit_return_type "void"
	nparams 3
	  param in name "propertyName" explicit_type "String"
	  param in name "oldValue" explicit_type "int"
	  param in name "newValue" explicit_type "int"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
@param propertyName
           propertyName
@param oldValue
           oldValue
@param newValue
           newValue
@see java.beans.PropertyChangeSupport#firePropertyChange(java.lang.String,
     int, int)
"
      end

      operation 391559 "firePropertyChange"
	protected explicit_return_type "void"
	nparams 3
	  param in name "propertyName" explicit_type "String"
	  param in name "oldValue" explicit_type "long"
	  param in name "newValue" explicit_type "long"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
@param propertyName
           propertyName
@param oldValue
           oldValue
@param newValue
           newValue
@see java.beans.PropertyChangeSupport#firePropertyChange(java.lang.String,
     int, int)
"
      end

      operation 391687 "firePropertyChange"
	protected explicit_return_type "void"
	nparams 3
	  param in name "propertyName" explicit_type "String"
	  param inout name "oldValue" explicit_type "Object"
	  param inout name "newValue" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
@param propertyName
           propertyName
@param oldValue
           oldValue
@param newValue
           newValue
@see java.beans.PropertyChangeSupport#firePropertyChange(java.lang.String,
     java.lang.Object, java.lang.Object)
"
      end

      operation 391815 "getPropertyChangeListeners"
	protected explicit_return_type "PropertyChangeListener"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
@return all of the <code>PropertyChangeListeners</code> added or an empty
        array if no listeners have been added
@see java.beans.PropertyChangeSupport#getPropertyChangeListeners()
"
      end

      operation 391943 "getPropertyChangeListeners"
	protected explicit_return_type "PropertyChangeListener"
	nparams 1
	  param in name "propertyName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
@param propertyName
           propertyName
@return all of the <code>PropertyChangeListeners</code> associated with
        the named property. If no such listeners have been added, or if
        <code>propertyName</code> is null, an empty array is returned.
@see java.beans.PropertyChangeSupport#getPropertyChangeListeners(java.lang.String)
"
      end

      operation 392071 "hasListeners"
	protected explicit_return_type "boolean"
	nparams 1
	  param in name "propertyName" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
@param propertyName
           propertyName
@return true if there are one or more listeners for the given property.
@see java.beans.PropertyChangeSupport#hasListeners(java.lang.String)
"
      end
    end

    class 197767 "IPropertyChangeCapable"
      visibility public stereotype "interface"
      cpp_decl ""
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This class needs to be implemented by java beans which are capable of
registering a <code>PropertyChangeListener</code>. See also java beans
specifications.
<p>
Copyright (c) 2005-2008 Vincent Vandenschrick. All rights reserved.
<p>

@version $LastChangedRevision: 959 $
@see java.beans.PropertyChangeSupport
@author Vincent Vandenschrick
"
      attribute 191111 "UNKNOWN"
	package explicit_type "Object"
	init_value "=  new Object()"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	idl_decl ""
	comment "
<code>UNKNOWN</code> value of property. This value may be passed as
<code>newValue</code> in <code>PropertyChangeEvents</code>.

"
      end

      operation 389895 "addPropertyChangeListener"
	package explicit_return_type "void"
	nparams 1
	  param inout name "listener" explicit_type "PropertyChangeListener"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Adds a new <code>PropertyChangeListener</code>.

@param listener
           The added listener.
@see java.beans.PropertyChangeSupport#addPropertyChangeListener(
     PropertyChangeListener)
"
      end

      operation 390023 "addPropertyChangeListener"
	package explicit_return_type "void"
	nparams 2
	  param in name "propertyName" explicit_type "String"
	  param inout name "listener" explicit_type "PropertyChangeListener"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Adds a new <code>PropertyChangeListener</code> on a specific property.

@param propertyName
           The listened property.
@param listener
           The added listener.
@see java.beans.PropertyChangeSupport#addPropertyChangeListener(String,
     PropertyChangeListener)
"
      end

      operation 390151 "removePropertyChangeListener"
	package explicit_return_type "void"
	nparams 1
	  param inout name "listener" explicit_type "PropertyChangeListener"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Removes a new <code>PropertyChangeListener</code>.

@param listener
           The removed listener.
@see java.beans.PropertyChangeSupport#removePropertyChangeListener(
     PropertyChangeListener)
"
      end

      operation 390279 "removePropertyChangeListener"
	package explicit_return_type "void"
	nparams 2
	  param in name "propertyName" explicit_type "String"
	  param inout name "listener" explicit_type "PropertyChangeListener"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Removes a <code>PropertyChangeListener</code> on a specific property.

@param propertyName
           The listened property.
@param listener
           The removed listener.
@see java.beans.PropertyChangeSupport#removePropertyChangeListener(String,
     PropertyChangeListener)
"
      end
    end

    class 197895 "AccessorInfo"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This class wraps a method object and helps analyzing it as an accessor.
<p>
Copyright (c) 2005-2008 Vincent Vandenschrick. All rights reserved.
<p>

@version $LastChangedRevision: 959 $
@author Vincent Vandenschrick
"
      attribute 191367 "ADDER"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  3"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	idl_decl ""
	comment "
This type of method is an adder (\"addToXXX\").

"
      end

      attribute 191495 "ADDER_PREFIX"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"addTo\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	idl_decl ""
	comment "
\"addTo\" prefix.

"
      end

      attribute 191623 "GETTER"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  1"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	idl_decl ""
	comment "
This type of method is a getter (either \"getXXX\" or \"isXXX\").

"
      end

      attribute 191751 "GETTER_PREFIX"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"get\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	idl_decl ""
	comment "
\"get\" prefix.

"
      end

      attribute 191879 "IS_PREFIX"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"is\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	idl_decl ""
	comment "
\"is\" prefix.

"
      end

      attribute 192007 "NONE"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  0"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	idl_decl ""
	comment "
This type of method is not an accessor.

"
      end

      attribute 192135 "REMOVER"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  4"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	idl_decl ""
	comment "
This type of method is a remover (\"removeFromXXX\").

"
      end

      attribute 192263 "REMOVER_PREFIX"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"removeFrom\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	idl_decl ""
	comment "
\"removeFrom\" prefix.

"
      end

      attribute 192391 "SETTER"
	class_attribute const_attribute public explicit_type "int"
	init_value "=  2"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	idl_decl ""
	comment "
This type of method is a setter (\"setXXX\").

"
      end

      attribute 192519 "SETTER_PREFIX"
	class_attribute const_attribute public explicit_type "String"
	init_value "=  \"set\""
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	idl_decl ""
	comment "
\"set\" prefix.

"
      end

      attribute 192647 "accessedPropertyName"
	private explicit_type "String"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	idl_decl ""
      end

      attribute 192775 "accessorType"
	private explicit_type "int"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	idl_decl ""
      end

      operation 392199 "AccessorInfo"
	public explicit_return_type ""
	nparams 1
	  param inout name "method" explicit_type "Method"
	
	java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Constructs a new <code>AccessorInfo</code> instance. If the method passed
in parameter is not an accessor, the <code>getAccessorType</code> method
will return <code>NONE</code>.

@param method
           the method supposed to be an accessor.
"
      end

      operation 392327 "computePropertyName"
	class_operation private explicit_return_type "String"
	nparams 2
	  param in name "accessorName" explicit_type "String"
	  param in name "accessorPrefix" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
${body}}
"
	
	
      end

      operation 392455 "getAccessedPropertyName"
	public explicit_return_type "String"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Gets the accessedPropertyName.

@return the accessedPropertyName.
"
      end

      operation 392583 "getAccessorType"
	public explicit_return_type "int"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Gets the accessorType.

@return the accessorType.
"
      end

      operation 392711 "isModifier"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Returns wether the underlying accessor is a modifier (setter, adder or
remover).

@return true if the underlying accessor is a modifier.
"
      end
    end

    class 198023 "BeanComparator"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
A bean comparator which compare beans based on a list of properties using
their natural order.
<p>
Copyright (c) 2005-2008 Vincent Vandenschrick. All rights reserved.
<p>

@version $LastChangedRevision: 959 $
@author Vincent Vandenschrick
"
      attribute 192903 "NATURAL_COMPARATOR"
	class_attribute const_attribute private explicit_type "Object"
	init_value "=  new NaturalComparator()"
	stereotype "Comparator"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	idl_decl ""
      end

      classrelation 217479 // orderingAccessors (<unidirectional association>)
	relation 217479 --->
	  stereotype "List"
	  a role_name "orderingAccessors" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 217479 // orderingAccessors (<unidirectional association>)
	  b parent class_ref 196231 // IAccessor
      end

      operation 392839 "compare"
	public explicit_return_type "int"
	nparams 2
	  param inout name "o1" explicit_type "Object"
	  param inout name "o2" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
{@inheritDoc}
"
      end

      operation 392967 "setOrderingAccessors"
	public explicit_return_type "void"
	nparams 1
	  param inout name "orderingAccessors" explicit_type "List<IAccessor>"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Sets the orderingAccessors.

@param orderingAccessors
           the orderingAccessors to set.
"
      end

      class 198279 "NaturalComparator"
	visibility private 
	cpp_decl ""
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 393095 "compare"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "o1" explicit_type "Object"
	    param inout name "o2" explicit_type "Object"
	  
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
${body}}
"
	  java_annotation "@SuppressWarnings(\"unchecked\")
"
	  
	  
	  comment "
{@inheritDoc}
"
	end
      end
    end

    class 198407 "BeanPropertyChangeRecorder"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
A simple class used to record bean property changes. Original values of
changed properties are also kept.
<p>
Copyright (c) 2005-2008 Vincent Vandenschrick. All rights reserved.
<p>

@version $LastChangedRevision: 959 $
@author Vincent Vandenschrick
"
      classrelation 217863 // changedPropertiesMap (<unidirectional association>)
	relation 217863 --->
	  stereotype "Map"
	  a role_name "changedPropertiesMap" private
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, Map<String, Object>> ${name}${value};
"
	    classrelation_ref 217863 // changedPropertiesMap (<unidirectional association>)
	  b parent class_ref 197767 // IPropertyChangeCapable
      end

      attribute 193031 "enabled"
	private explicit_type "boolean"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	idl_decl ""
      end

      attribute 193159 "interceptor"
	private explicit_type "PropertyChangeListener"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	idl_decl ""
      end

      operation 393223 "BeanPropertyChangeRecorder"
	public explicit_return_type ""
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Constructs a new <code>BeanPropertyChangeRecorder</code> instance.
"
      end

      operation 393351 "BeanPropertyChangeRecorder"
	public explicit_return_type ""
	nparams 1
	  param inout name "interceptor" explicit_type "PropertyChangeListener"
	
	java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Constructs a new <code>BeanPropertyChangeRecorder</code> instance.

@param interceptor
           an optional property change listener which will be notified of
           changed properties.
"
      end

      operation 393479 "getChangedProperties"
	public explicit_return_type "Map<String, Object>"
	nparams 1
	  param inout name "bean" type class_ref 197767 // IPropertyChangeCapable
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Gets the changed properties which have been recorded since this recorder
have started on the specified bean.

@param bean
           the bean to get the changed properties of.
@return the set of changed properties on the bean.
"
      end

      operation 393607 "isEnabled"
	public explicit_return_type "boolean"
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Gets the enabled.

@return the enabled.
"
      end

      operation 393735 "propertyChange"
	public explicit_return_type "void"
	nparams 1
	  param inout name "evt" explicit_type "PropertyChangeEvent"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
{@inheritDoc}
"
      end

      operation 393863 "register"
	public explicit_return_type "void"
	nparams 2
	  param inout name "bean" type class_ref 197767 // IPropertyChangeCapable
	  param inout name "initialChangedProperties" explicit_type "Map<String, Object>"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Starts the property change recording on a bean.

@param bean
           the bean to record the property changes of.
@param initialChangedProperties
           the set of initial changed properties.
"
      end

      operation 393991 "resetChangedProperties"
	public explicit_return_type "void"
	nparams 2
	  param inout name "bean" type class_ref 197767 // IPropertyChangeCapable
	  param inout name "changedProperties" explicit_type "Map<String, Object>"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Resets the changed properties recording on the bean specified to a
specified set of changed properties.

@param bean
           the bean to reset the recording of.
@param changedProperties
           a new set of changed properties.
"
      end

      operation 394119 "setEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Sets the enabled.

@param enabled
           the enabled to set.
"
      end

      operation 394247 "unregister"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bean" type class_ref 197767 // IPropertyChangeCapable
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Stops the recording of property changes on a bean.

@param bean
           the bean to stop the property changes recording on.
"
      end
    end

    class 198535 "MissingPropertyException"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This exception is thrown whenever a looked-up property does not exist.
<p>
Copyright (c) 2005-2008 Vincent Vandenschrick. All rights reserved.
<p>

@version $LastChangedRevision: 959 $
@author Vincent Vandenschrick
"
      classrelation 218119 // <generalisation>
	relation 218119 ---|>
	  a public
	    java "${type}"
	    classrelation_ref 218119 // <generalisation>
	  b parent class_ref 198663 // NestedRuntimeException
      end

      attribute 193415 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  802344614276374621L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	idl_decl ""
      end

      operation 394759 "MissingPropertyException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Constructs a new <code>MissingPropertyException</code>.

@param message
           the exception message.
"
      end
    end

    class 198919 "PropertyHelper"
      visibility public 
      cpp_decl ""
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This helper class contains utility methods to work with bean properties.
<p>
Copyright (c) 2005-2008 Vincent Vandenschrick. All rights reserved.
<p>

@version $LastChangedRevision: 959 $
@author Vincent Vandenschrick
"
      operation 394887 "PropertyHelper"
	private explicit_return_type ""
	nparams 0
	
	java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
${body}}
"
	
	
      end

      operation 395015 "getPropertyDescriptor"
	class_operation public explicit_return_type "PropertyDescriptor"
	nparams 2
	  param inout name "beanClass" explicit_type "Class<?>"
	  param in name "property" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Gets the property descriptor of a property on a specified class. If the
specified class is an interface, all its super-interfaces are also
processed.

@param beanClass
           the class to get the property descriptor of.
@param property
           the property to be searched for its descriptor.
@return the property descriptor found.
"
      end

      operation 395143 "getPropertyNames"
	class_operation public explicit_return_type "Collection<String>"
	nparams 1
	  param inout name "beanClass" explicit_type "Class<?>"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Retrieves all property names declared by a bean class.

@param beanClass
           the class to introspect.
@return the collection of property names.
"
      end

      operation 395271 "getPropertyType"
	class_operation public explicit_return_type "Class<?>"
	nparams 2
	  param inout name "beanClass" explicit_type "Class<?>"
	  param in name "property" explicit_type "String"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Retrieves the type of a bean property.

@param beanClass
           the bean class on which to look for the property.
@param property
           the property to look for.
@return the type of the property.
"
      end
    end

    class 199047 "SinglePropertyChangeSupport"
      visibility public 
      cpp_decl ""
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "
This property change support prevents from adding twice the same property
change listener.
<p>
Copyright (c) 2005-2008 Vincent Vandenschrick. All rights reserved.
<p>

@version $LastChangedRevision: 959 $
@author Vincent Vandenschrick
"
      attribute 193543 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value "=  -3547472625502417905L"
	cpp_decl ""
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	idl_decl ""
      end

      operation 395399 "SinglePropertyChangeSupport"
	public explicit_return_type ""
	nparams 1
	  param inout name "sourceBean" explicit_type "Object"
	
	java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
${body}}
"
	
	
	comment "
Constructs a new <code>SinglePropertyChangeSupport</code> instance.

@param sourceBean
           the source bean.
"
      end

      operation 395527 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" explicit_type "PropertyChangeListener"
	
	synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
${body}}
"
	java_annotation "@Override
"
	
	
	comment "
Checks listener uniqueness before performing.
<p>
{@inheritDoc}
"
      end

      operation 395655 "addPropertyChangeListener"
	public explicit_return_type "void"
	nparams 2
	  param in name "propertyName" explicit_type "String"
	  param inout name "listener" explicit_type "PropertyChangeListener"
	
	synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
${body}}
"
	java_annotation "@Override
"
	
	
	comment "
Checks listener uniqueness before performing.
<p>
{@inheritDoc}
"
      end

      operation 395783 "checkUniqueness"
	private explicit_return_type "boolean"
	nparams 2
	  param in name "propertyName" explicit_type "String"
	  param inout name "listener" explicit_type "PropertyChangeListener"
	
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
${body}}
"
	
	
      end
    end
  end

  deploymentview 142855 "bean"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default
    artifact 183943 "IPropertyChangeCapable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.PropertyChangeListener;
${definition}"
      associated_classes
	class_ref 197767 // IPropertyChangeCapable
      end
    end

    artifact 184071 "AbstractPropertyChangeCapable"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import com.d2s.framework.util.exception.NestedRuntimeException;
${definition}"
      associated_classes
	class_ref 197639 // AbstractPropertyChangeCapable
      end
    end

    artifact 184199 "AccessorInfo"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.Method;
${definition}"
      associated_classes
	class_ref 197895 // AccessorInfo
      end
    end

    artifact 184327 "BeanComparator"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.InvocationTargetException;
import java.util.Comparator;
import java.util.List;
import com.d2s.framework.util.accessor.IAccessor;
${definition}"
      associated_classes
	class_ref 198023 // BeanComparator
      end
    end

    artifact 184455 "BeanPropertyChangeRecorder"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.HashMap;
import java.util.Map;
import java.util.WeakHashMap;
${definition}"
      associated_classes
	class_ref 198407 // BeanPropertyChangeRecorder
      end
    end

    artifact 184711 "MissingPropertyException"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import com.d2s.framework.util.exception.NestedRuntimeException;
${definition}"
      associated_classes
	class_ref 198535 // MissingPropertyException
      end
    end

    artifact 184839 "PropertyHelper"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.IntrospectionException;
import java.beans.PropertyDescriptor;
import java.util.Collection;
import java.util.HashSet;
import org.apache.commons.beanutils.PropertyUtils;
${definition}"
      associated_classes
	class_ref 198919 // PropertyHelper
      end
    end

    artifact 184967 "SinglePropertyChangeSupport"
      stereotype "source"
      java_src "${comment}
${package}
${imports}
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
${definition}"
      associated_classes
	class_ref 199047 // SinglePropertyChangeSupport
      end
    end
  end

  package_ref 145159 // integrity
end
