class ActionMap
!!!200711.java!!!	completeActionMap(inout globalActionMap : Map<String, List<IDisplayableAction>>, inout localActionMap : Map<String, List<IDisplayableAction>>) : void

    if (localActionMap != null) {
      for (Map.Entry<String, List<IDisplayableAction>> actionListEntry : localActionMap
          .entrySet()) {
        List<IDisplayableAction> globalActionList = globalActionMap
            .get(actionListEntry.getKey());
        if (globalActionList == null) {
          globalActionList = new ArrayList<IDisplayableAction>();
          globalActionMap.put(actionListEntry.getKey(), globalActionList);
        }
        for (IDisplayableAction localAction : actionListEntry.getValue()) {
          int existingIndex = globalActionList.indexOf(localAction);
          if (existingIndex >= 0) {
            globalActionList.set(existingIndex, localAction);
          } else {
            globalActionList.add(localAction);
          }
        }
      }
    }
!!!200839.java!!!	getActionMap() : Map<String, List<IDisplayableAction>>

    Map<String, List<IDisplayableAction>> returnedActionMap = new LinkedHashMap<String, List<IDisplayableAction>>();
    if (parentActionMaps != null) {
      for (ActionMap parentActionMap : parentActionMaps) {
        completeActionMap(returnedActionMap, parentActionMap.getActionMap());
      }
    }
    if (actionMap != null) {
      completeActionMap(returnedActionMap, actionMap);
    }
    return returnedActionMap;
!!!200967.java!!!	setActionMap(inout actionMap : Map<String, List<IDisplayableAction>>) : void

    this.actionMap = actionMap;
!!!201095.java!!!	setParentActionMaps(inout parentActionMaps : List<ActionMap>) : void

    this.parentActionMaps = parentActionMaps;
