class AbstractBackendController
!!!226439.java!!!	checkModuleAccess(in moduleName : String) : void

    checkAccess((ISecurable) getModuleConnector(moduleName).getConnectorValue());
!!!226567.java!!!	createModelConnector(inout modelDescriptor : IModelDescriptor) : IValueConnector

    return beanConnectorFactory.createModelConnector(modelDescriptor);
!!!226695.java!!!	execute(inout action : IAction, inout context : Map<String, Object>) : boolean

    if (action == null) {
      return true;
    }
    SecurityHelper.checkAccess(getApplicationSession().getSubject(), action,
        getTranslationProvider(), getLocale());
    Map<String, Object> actionContext = getInitialActionContext();
    if (context != null) {
      context.putAll(actionContext);
    }
    return action.execute(this, context);
!!!226823.java!!!	getApplicationSession() : IApplicationSession

    return applicationSession;
!!!226951.java!!!	getBeanAccessorFactory() : IAccessorFactory

    return beanAccessorFactory;
!!!227079.java!!!	getBeanConnectorFactory() : IModelConnectorFactory

    return beanConnectorFactory;
!!!227207.java!!!	getEntityFactory() : IEntityFactory

    return entityFactory;
!!!227335.java!!!	getInitialActionContext() : Map<String, Object>

    Map<String, Object> initialActionContext = new HashMap<String, Object>();
    initialActionContext.put(ActionContextConstants.BACK_CONTROLLER, this);
    return initialActionContext;
!!!227463.java!!!	getLocale() : Locale

    return applicationSession.getLocale();
!!!227591.java!!!	getMapAccessorFactory() : IAccessorFactory

    return mapAccessorFactory;
!!!227719.java!!!	getMapConnectorFactory() : IModelConnectorFactory

    return mapConnectorFactory;
!!!227847.java!!!	getModuleConnector(in moduleName : String) : IValueConnector

    return moduleConnectors.get(moduleName);
!!!227975.java!!!	handleException(inout ex : Throwable, inout context : Map<String, Object>) : void

    // NO-OP
!!!228103.java!!!	merge(inout entity : IEntity, inout mergeMode : MergeMode) : IEntity

    return getApplicationSession().merge(entity, mergeMode);
!!!228231.java!!!	merge(inout entities : List<IEntity>, inout mergeMode : MergeMode) : IEntity

    return getApplicationSession().merge(entities, mergeMode);
!!!228359.java!!!	retrieveComponents() : ComponentTransferStructure

    return transferStructure;
!!!228487.java!!!	setApplicationSession(inout applicationSession : IApplicationSession) : void

    if (!(applicationSession instanceof BasicApplicationSession)) {
      throw new IllegalArgumentException(
          "applicationSession must be a BasicApplicationSession.");
    }
    this.applicationSession = applicationSession;
    linkSessionArtifacts();
!!!228615.java!!!	setBeanAccessorFactory(inout beanAccessorFactory : IAccessorFactory) : void

    this.beanAccessorFactory = beanAccessorFactory;
!!!228743.java!!!	setBeanConnectorFactory(inout beanConnectorFactory : IModelConnectorFactory) : void

    this.beanConnectorFactory = beanConnectorFactory;
!!!228871.java!!!	setEntityFactory(inout entityFactory : IEntityFactory) : void

    if (!(entityFactory instanceof ApplicationSessionAwareProxyEntityFactory)) {
      throw new IllegalArgumentException(
          "entityFactory must be an ApplicationSessionAwareProxyEntityFactory.");
    }
    this.entityFactory = entityFactory;
    linkSessionArtifacts();
!!!228999.java!!!	setMapAccessorFactory(inout mapAccessorFactory : IAccessorFactory) : void

    this.mapAccessorFactory = mapAccessorFactory;
!!!229127.java!!!	setMapConnectorFactory(inout mapConnectorFactory : IModelConnectorFactory) : void

    this.mapConnectorFactory = mapConnectorFactory;
!!!229255.java!!!	installModules(inout modules : Map<String, Module>) : void

    moduleConnectors = new HashMap<String, IValueConnector>();
    for (Map.Entry<String, Module> moduleEntry : modules.entrySet()) {
      IValueConnector nextModuleConnector = beanConnectorFactory
          .createModelConnector(ModuleDescriptor.MODULE_DESCRIPTOR);
      nextModuleConnector.setConnectorValue(moduleEntry.getValue());
      moduleConnectors.put(moduleEntry.getKey(), nextModuleConnector);
    }
!!!229383.java!!!	start(inout locale : Locale) : boolean

    applicationSession.setLocale(locale);
    return true;
!!!229511.java!!!	stop() : boolean

    return true;
!!!229639.java!!!	storeComponents(inout components : ComponentTransferStructure) : void

    this.transferStructure = components;
!!!229767.java!!!	linkSessionArtifacts() : void

    if (getApplicationSession() != null && getEntityFactory() != null) {
      ((ApplicationSessionAwareProxyEntityFactory) getEntityFactory())
          .setApplicationSession(getApplicationSession());
      ((BasicApplicationSession) getApplicationSession())
          .setEntityFactory(getEntityFactory());
    }
