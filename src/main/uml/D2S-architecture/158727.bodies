class AddBeanAsSubModuleAction
!!!236551.java!!!	execute(inout actionHandler : IActionHandler, inout context : Map<String, Object>) : boolean

    int[] selectedIndices = getSelectedIndices(context);

    if (selectedIndices == null || selectedIndices.length == 0) {
      return false;
    }
    ICompositeValueConnector moduleConnector = getModuleConnector(context);
    ICollectionConnector collectionConnector = getModelConnector(context);
    SubModule parentModule = (SubModule) moduleConnector.getConnectorValue();
    List<SubModule> children;
    if (parentModule.getSubModules() == null) {
      children = new ArrayList<SubModule>(selectedIndices.length);
    } else {
      children = new ArrayList<SubModule>(parentModule.getSubModules());
    }
    int[] childSelectedIndices = new int[selectedIndices.length];
    for (int i = 0; i < selectedIndices.length; i++) {
      IPropertyChangeCapable nextselectedProjectedObject = (IPropertyChangeCapable) collectionConnector
          .getChildConnector(selectedIndices[i]).getConnectorValue();
      BeanModule nextSubModule = new BeanModule();
      nextSubModule.setModuleObject(nextselectedProjectedObject);
      nextSubModule.setName(String.valueOf(nextselectedProjectedObject));
      int nextSubModuleIndex = children.indexOf(nextSubModule);
      if (nextSubModuleIndex < 0) {
        childSelectedIndices[i] = children.size();
        children.add(nextSubModule);
      } else {
        childSelectedIndices[i] = nextSubModuleIndex;
      }
    }
    parentModule.setSubModules(children);
    context.put(ActionContextConstants.SELECTED_INDICES, childSelectedIndices);
    return super.execute(actionHandler, context);
