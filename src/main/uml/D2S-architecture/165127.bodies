class AbstractFlowAction
!!!277767.java!!!	AbstractFlowAction(in firstOption : String, in secondOption : String, in thirdOption : String)

    this.firstOption = firstOption;
    this.secondOption = secondOption;
    this.thirdOption = thirdOption;
!!!277895.java!!!	execute(in actionHandler : IActionHandler, in context : Map<String, Object>) : boolean

    ITranslationProvider translationProvider = getTranslationProvider(context);
    Locale locale = getLocale(context);
    final Map<String, String> optionReverseDictionary = new HashMap<String, String>();
    String translatedFirstOption = null;
    if (firstOption != null) {
      translatedFirstOption = translationProvider.getTranslation(firstOption,
          locale);
      optionReverseDictionary.put(translatedFirstOption, firstOption);
    }
    String translatedSecondOption = null;
    if (secondOption != null) {
      translatedSecondOption = translationProvider.getTranslation(secondOption,
          locale);
      optionReverseDictionary.put(translatedSecondOption, secondOption);
    }
    String translatedThirdOption = null;
    if (thirdOption != null) {
      translatedThirdOption = translationProvider.getTranslation(thirdOption,
          locale);
      optionReverseDictionary.put(translatedThirdOption, thirdOption);
    }
    final ULCAlert alert = new ULCAlert(UlcUtil
        .getVisibleWindow(getSourceComponent(context)), getI18nName(
        translationProvider, locale), getMessage(context),
        translatedFirstOption, translatedSecondOption, translatedThirdOption,
        getIconFactory(context).getIcon(getIconImageURL(),
            IIconFactory.LARGE_ICON_SIZE));
    alert.addWindowListener(new IWindowListener() {

      private static final long serialVersionUID = -6049928144066455758L;

      public void windowClosing(@SuppressWarnings("unused")
      WindowEvent event) {
        context.put(ActionContextConstants.NEXT_ACTION,
            getNextAction(optionReverseDictionary.get(alert.getValue())));
        executeNextAction(actionHandler, context);
      }
    });
    alert.show();
    return true;
!!!278023.java!!!	executeNextAction(inout actionHandler : IActionHandler, inout context : Map<String, Object>) : void

    super.execute(actionHandler, context);
