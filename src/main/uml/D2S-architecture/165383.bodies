class ChooseFileAction
!!!278791.java!!!	setDefaultFileName(in defaultFileName : String) : void

    this.defaultFileName = defaultFileName;
!!!278919.java!!!	setFileFilter(inout fileFilter : Map<String, List<String>>) : void

    Map<String, List<String>> oldFileFilter = this.fileFilter;
    this.fileFilter = fileFilter;
    if (oldFileFilter != this.fileFilter) {
      fileChooser = null;
    }
!!!279047.java!!!	getFileChooser(inout context : Map<String, Object>) : FileChooserConfig

    if (fileChooser == null) {
      fileChooser = new FileChooserConfig();
      fileChooser.setDialogTitle(getI18nName(getTranslationProvider(context),
          getLocale(context)));
      if (fileFilter != null) {
        for (Map.Entry<String, List<String>> fileTypeEntry : fileFilter
            .entrySet()) {
          StringBuffer extensionsDescription = new StringBuffer(" (");
          String[] allowedExtensions = new String[fileTypeEntry.getValue()
              .size() * 2];
          int i = 0;
          for (String fileExtension : fileTypeEntry.getValue()) {
            extensionsDescription.append("*").append(fileExtension).append(" ");
            allowedExtensions[i++] = fileExtension.toLowerCase();
            allowedExtensions[i++] = fileExtension.toUpperCase();
          }
          extensionsDescription.append(")");
          fileChooser
              .addFileFilterConfig(new FileChooserConfig.FileFilterConfig(
                  allowedExtensions, getTranslationProvider(context)
                      .getTranslation(fileTypeEntry.getKey(),
                          getLocale(context))
                      + extensionsDescription.toString()));
          if (defaultFileName != null) {
            fileChooser.setSelectedFile(defaultFileName);
          }
        }
      }
    }
    return fileChooser;
