class SaveFileAction
!!!279815.java!!!	execute(inout actionHandler : IActionHandler, in context : Map<String, Object>) : boolean

    try {
      ClientContext.storeFile(new IFileStoreHandler() {

        private static final long serialVersionUID = -1025629868916915262L;

        @SuppressWarnings("unused")
        public void onFailure(int reason, String description) {
          if (fileSaveCallback != null) {
            fileSaveCallback.cancel(context);
          }
        }

        public void onSuccess(String filePath) {
          getFileChooser(context).setCurrentDirectory(filePath);
          if (fileSaveCallback != null) {
            fileSaveCallback.fileWritten(filePath, context);
          }
        }

        public void prepareFile(OutputStream out) {
          if (fileSaveCallback != null) {
            fileSaveCallback.fileChosen(out, context);
          }
        }
      }, getFileChooser(context));
    } catch (Exception ex) {
      throw new ActionException(ex);
    }
    return super.execute(actionHandler, context);
!!!279943.java!!!	setFileSaveCallback(inout fileSaveCallback : IFileSaveCallback) : void

    this.fileSaveCallback = fileSaveCallback;
!!!280071.java!!!	getFileChooser(inout context : Map<String, Object>) : FileChooserConfig

    FileChooserConfig fileChooser = super.getFileChooser(context);
    return fileChooser;
