class LovAction
!!!365703.java!!!	LovAction()

    setName("lov.name");
    setDescription("lov.description");
    setIconImageURL("classpath:images/find-48x48.png");
    setAutoquery(true);
!!!365831.java!!!	execute(inout actionHandler : IActionHandler, inout context : Map<String, Object>) : boolean

    List<IDisplayableAction> actions = new ArrayList<IDisplayableAction>();
    getViewConnector(context).setConnectorValue(
        getViewConnector(context).getConnectorValue());
    okAction.putInitialContext(ActionContextConstants.SOURCE_VIEW_CONNECTOR,
        getViewConnector(context));
    actions.add(findAction);
    actions.add(okAction);
    actions.add(cancelAction);
    context.put(ActionContextConstants.DIALOG_ACTIONS, actions);
    IReferencePropertyDescriptor<IEntity> erqDescriptor = getEntityRefQueryDescriptor(context);
    IView<SComponent> lovView = getViewFactory(context).createView(
        lovViewDescriptorFactory.createLovViewDescriptor(erqDescriptor),
        actionHandler, getLocale(context));
    context.put(ActionContextConstants.DIALOG_VIEW, lovView);
    context.put(ActionContextConstants.ENTITY_REF_DESCRIPTOR, erqDescriptor);
    actionHandler.execute(createQueryEntityAction, context);
    IValueConnector queryEntityConnector = (IValueConnector) context
        .get(ActionContextConstants.QUERY_MODEL_CONNECTOR);
    getMvcBinder(context).bind(lovView.getConnector(), queryEntityConnector);
    findAction.putInitialContext(ActionContextConstants.QUERY_MODEL_CONNECTOR,
        queryEntityConnector);
    Object queryPropertyValue = context
        .get(ActionContextConstants.ACTION_COMMAND);
    if (autoquery && queryPropertyValue != null
        && !queryPropertyValue.equals("%")) {
      actionHandler.execute(findAction, context);
      IQueryEntity queryEntity = (IQueryEntity) queryEntityConnector
          .getConnectorValue();
      if (queryEntity.getQueriedEntities() != null
          && queryEntity.getQueriedEntities().size() == 1) {
        IEntity selectedEntity = ((IController) actionHandler).merge(
            queryEntity.getQueriedEntities().get(0), MergeMode.MERGE_KEEP);
        getViewConnector(context).setConnectorValue(selectedEntity);
        return true;
      }
    }
    return super.execute(actionHandler, context);
!!!365959.java!!!	setAutoquery(inout autoquery : boolean) : void

    this.autoquery = autoquery;
!!!366087.java!!!	setCancelAction(inout cancelAction : IDisplayableAction) : void

    this.cancelAction = cancelAction;
!!!366215.java!!!	setCreateQueryEntityAction(inout createQueryEntityAction : CreateQueryEntityAction) : void

    this.createQueryEntityAction = createQueryEntityAction;
!!!366343.java!!!	setEntityRefQueryDescriptor(inout entityRefQueryDescriptor : IReferencePropertyDescriptor) : void

    this.entityRefQueryDescriptor = entityRefQueryDescriptor;
!!!366471.java!!!	setFindAction(inout findAction : IDisplayableAction) : void

    this.findAction = findAction;
!!!366599.java!!!	setLovViewDescriptorFactory(inout lovViewDescriptorFactory : ILovViewDescriptorFactory) : void

    this.lovViewDescriptorFactory = lovViewDescriptorFactory;
!!!366727.java!!!	setOkAction(inout okAction : IDisplayableAction) : void

    this.okAction = okAction;
!!!366855.java!!!	getEntityRefQueryDescriptor(inout context : Map<String, Object>) : IReferencePropertyDescriptor

    if (entityRefQueryDescriptor != null) {
      return entityRefQueryDescriptor;
    }
    IModelDescriptor modelDescriptor = (IModelDescriptor) context
        .get(ActionContextConstants.MODEL_DESCRIPTOR);
    if (modelDescriptor instanceof IReferencePropertyDescriptor) {
      return (IReferencePropertyDescriptor<IEntity>) modelDescriptor;
    }
    return null;
