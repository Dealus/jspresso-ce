class WizardAction
!!!369287.java!!!	execute(in actionHandler : IActionHandler, in context : Map<String, Object>) : boolean
    final SDialog dialog;
    final Set<String> alreadyDisplayedSteps = new HashSet<String>();
    final IValueConnector modelConnector = modelConnectorFactory
        .createModelConnector(firstWizardStep.getViewDescriptor()
            .getModelDescriptor());

    Map<String, Object> wizardModelInit = (Map<String, Object>) context
        .get(ActionContextConstants.ACTION_PARAM);
    Map<String, Object> wizardModel = new ObjectEqualityMap<String, Object>();
    if (wizardModelInit != null) {
      wizardModel.putAll(wizardModelInit);
    }
    completeInitialWizardModel(wizardModel, context);
    modelConnector.setConnectorValue(wizardModel);
    context.put(ActionContextConstants.ACTION_PARAM, wizardModel);

    SFrame window = getSourceComponent(context).getParentFrame();
    dialog = new SDialog(window, getI18nName(getTranslationProvider(context),
        getLocale(context)));

    dialog.setLayout(new SBorderLayout());
    //dialog.setClosable(false);

    final SPanel cardPanel = new SPanel();
    cardPanel.setBorder(new SEmptyBorder(new Insets(5, 10, 5, 10)));

    final SCardLayout cardLayout = new SCardLayout();
    cardPanel.setLayout(cardLayout);

    final SButton backButton = new SButton(getIconFactory(context)
        .getBackwardIcon(IIconFactory.SMALL_ICON_SIZE));
    final SButton nextButton = new SButton(getIconFactory(context)
        .getForwardIcon(IIconFactory.SMALL_ICON_SIZE));
    final SButton finishButton = new SButton(getIconFactory(context).getIcon(
        finishAction.getIconImageURL(), IIconFactory.SMALL_ICON_SIZE));
    finishButton.setText(finishAction.getI18nName(
        getTranslationProvider(context), getLocale(context)));
    SButton cancelButton = new SButton(getIconFactory(context).getCancelIcon(
        IIconFactory.SMALL_ICON_SIZE));
    cancelButton.setText(getTranslationProvider(context).getTranslation(
        "cancel", getLocale(context)));

    backButton.addActionListener(new ActionListener() {

      public void actionPerformed(@SuppressWarnings("unused")
      ActionEvent e) {
        IWizardStepDescriptor currentWizardStep = getCurrentWizardStep(context);
        IWizardStepDescriptor backWizardStep = currentWizardStep
            .getPreviousStepDescriptor(context);
        show(dialog, cardPanel, alreadyDisplayedSteps, backWizardStep,
            backButton, nextButton, finishButton, modelConnector,
            actionHandler, context, false);
      }
    });

    nextButton.addActionListener(new ActionListener() {

      public void actionPerformed(@SuppressWarnings("unused")
      ActionEvent e) {
        IWizardStepDescriptor currentWizardStep = getCurrentWizardStep(context);
        if (currentWizardStep.getOnLeaveAction() == null
            || actionHandler.execute(currentWizardStep.getOnLeaveAction(),
                context)) {
          IWizardStepDescriptor nextWizardStep = currentWizardStep
              .getNextStepDescriptor(context);
          show(dialog, cardPanel, alreadyDisplayedSteps, nextWizardStep,
              backButton, nextButton, finishButton, modelConnector,
              actionHandler, context, false);
          if (nextWizardStep.getOnEnterAction() != null) {
            actionHandler.execute(nextWizardStep.getOnEnterAction(), context);
          }
        }
      }
    });

    finishButton.addActionListener(new ActionListener() {

      public void actionPerformed(@SuppressWarnings("unused")
      ActionEvent e) {
        IWizardStepDescriptor currentWizardStep = getCurrentWizardStep(context);
        if (currentWizardStep.getOnLeaveAction() == null
            || actionHandler.execute(currentWizardStep.getOnLeaveAction(),
                context)) {
          dialog.dispose();
          actionHandler.execute(finishAction, context);
        }
      }
    });

    cancelButton.addActionListener(new ActionListener() {

      public void actionPerformed(@SuppressWarnings("unused")
      ActionEvent e) {
        dialog.dispose();
      }
    });

    SPanel buttonPanel = new SPanel();
    SPanel buttonBox = new SPanel(new SBoxLayout(/*buttonPanel,*/ SBoxLayout.X_AXIS));

    buttonPanel.setLayout(new SBorderLayout());
    buttonPanel.add(new SSeparator(), SBorderLayout.NORTH);

    buttonBox.setBorder(new SEmptyBorder(new Insets(5, 10, 5, 10)));
    buttonBox.add(backButton);
    buttonBox.add(new SSpacer(10, 10));
    buttonBox.add(nextButton);
    buttonBox.add(new SSpacer(10, 10));
    buttonBox.add(finishButton);
    buttonBox.add(new SSpacer(10, 10));
    buttonBox.add(cancelButton);

    buttonPanel.add(buttonBox, SBorderLayout.EAST);

    dialog.add(buttonPanel, SBorderLayout.SOUTH);
    dialog.add(cardPanel, SBorderLayout.CENTER);

    dialog.setDefaultButton(nextButton);

    cardPanel.setPreferredSize(new SDimension("500px", "250px"));
    dialog.setPreferredSize(new SDimension("50%", "100%"));

    show(dialog, cardPanel, alreadyDisplayedSteps, firstWizardStep, backButton,
        nextButton, finishButton, modelConnector, actionHandler, context, true);
    return super.execute(actionHandler, context);
!!!369415.java!!!	setFinishAction(inout finishAction : IDisplayableAction) : void
    this.finishAction = finishAction;
!!!369543.java!!!	setFirstWizardStep(inout firstWizardStep : IWizardStepDescriptor) : void
    this.firstWizardStep = firstWizardStep;
!!!369671.java!!!	setModelConnectorFactory(inout modelConnectorFactory : IModelConnectorFactory) : void
    this.modelConnectorFactory = modelConnectorFactory;
!!!369799.java!!!	completeInitialWizardModel(inout initialWizardModel : Map<String, Object>, inout context : Map<String, Object>) : void
    // No-op by default.
!!!369927.java!!!	getCurrentWizardStep(inout context : Map<String, Object>) : IWizardStepDescriptor
    IWizardStepDescriptor currentWizardStep = (IWizardStepDescriptor) context
        .get(ActionContextConstants.DIALOG_VIEW);
    return currentWizardStep;
!!!370055.java!!!	setCurrentWizardStep(inout currentWizardStep : IWizardStepDescriptor, inout context : Map<String, Object>) : void
    context.put(ActionContextConstants.DIALOG_VIEW, currentWizardStep);
!!!370183.java!!!	show(inout dialog : SDialog, inout cardPanel : SPanel, inout alreadyDisplayedSteps : Set<String>, inout wizardStep : IWizardStepDescriptor, inout backButton : SButton, inout nextButton : SButton, inout finishButton : SButton, inout modelConnector : IValueConnector, inout actionHandler : IActionHandler, inout context : Map<String, Object>, inout firstShow : boolean) : void
    String cardName = wizardStep.getName();
    if (!alreadyDisplayedSteps.contains(cardName)) {
      alreadyDisplayedSteps.add(cardName);
      IView<SComponent> view = getViewFactory(context).createView(
          wizardStep.getViewDescriptor(), actionHandler, getLocale(context));
      cardPanel.add(view.getPeer(), cardName);
      getMvcBinder(context).bind(view.getConnector(), modelConnector);
    }
    ((SCardLayout) (cardPanel.getLayout())).show(cardPanel, cardName);

    ITranslationProvider translationProvider = getTranslationProvider(context);
    Locale locale = getLocale(context);

    if (wizardStep.getPreviousStepDescriptor(context) != null) {
      backButton.setEnabled(true);
    } else {
      backButton.setEnabled(false);
    }
    if (wizardStep.getPreviousLabelKey() != null) {
      backButton.setText(translationProvider.getTranslation(wizardStep
          .getPreviousLabelKey(), locale));
    } else {
      backButton.setText(translationProvider.getTranslation(
          IWizardStepDescriptor.DEFAULT_PREVIOUS_KEY, locale));
    }

    if (wizardStep.getNextStepDescriptor(context) != null) {
      nextButton.setEnabled(true);
    } else {
      nextButton.setEnabled(false);
    }
    if (wizardStep.getNextLabelKey() != null) {
      nextButton.setText(translationProvider.getTranslation(wizardStep
          .getNextLabelKey(), locale));
    } else {
      nextButton.setText(translationProvider.getTranslation(
          IWizardStepDescriptor.DEFAULT_NEXT_KEY, locale));
    }

    if (wizardStep.canFinish(context)) {
      finishButton.setEnabled(true);
    } else {
      finishButton.setEnabled(false);
    }
    dialog.setTitle(getI18nName(translationProvider, locale) + " - "
        + wizardStep.getI18nName(translationProvider, locale));
    setCurrentWizardStep(wizardStep, context);
    if (!firstShow) {
      dialog.setVisible(false);
    }
    dialog.show(WingsUtil.getVisibleWindow(getSourceComponent(context)));
