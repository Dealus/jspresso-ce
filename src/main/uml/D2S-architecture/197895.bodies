class AccessorInfo
!!!392199.java!!!	AccessorInfo(inout method : Method)

    String methodName = method.getName();
    Class<?>[] methodArguments = method.getParameterTypes();
    if (methodArguments.length == 0) {
      if (methodName.startsWith(GETTER_PREFIX)) {
        accessedPropertyName = computePropertyName(methodName, GETTER_PREFIX);
        accessorType = GETTER;
      } else if (methodName.startsWith(IS_PREFIX)) {
        accessedPropertyName = computePropertyName(methodName, IS_PREFIX);
        accessorType = GETTER;
      }
    } else if (methodArguments.length == 1) {
      if (methodName.startsWith(SETTER_PREFIX)) {
        accessedPropertyName = computePropertyName(methodName, SETTER_PREFIX);
        accessorType = SETTER;
      } else if (methodName.startsWith(ADDER_PREFIX)) {
        accessedPropertyName = computePropertyName(methodName, ADDER_PREFIX);
        accessorType = ADDER;
      } else if (methodName.startsWith(REMOVER_PREFIX)) {
        accessedPropertyName = computePropertyName(methodName, REMOVER_PREFIX);
        accessorType = REMOVER;
      }
    } else if (methodArguments.length == 2) {
      if (methodName.startsWith(ADDER_PREFIX)) {
        accessedPropertyName = computePropertyName(methodName, ADDER_PREFIX);
        accessorType = ADDER;
      }
    }
!!!392327.java!!!	computePropertyName(in accessorName : String, in accessorPrefix : String) : String

    char firstLetter = Character.toLowerCase(accessorName.charAt(accessorPrefix
        .length()));
    return firstLetter + accessorName.substring(accessorPrefix.length() + 1);
!!!392455.java!!!	getAccessedPropertyName() : String

    return accessedPropertyName;
!!!392583.java!!!	getAccessorType() : int

    return accessorType;
!!!392711.java!!!	isModifier() : boolean

    switch (accessorType) {
      case SETTER:
      case ADDER:
      case REMOVER:
        return true;
      default:
    }
    return false;
