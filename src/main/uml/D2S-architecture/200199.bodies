class ObjectEqualityMap
!!!397831.java!!!	ObjectEqualityMap()
    super();
    propertyChangeSupport = new SinglePropertyChangeSupport(this);
!!!397959.java!!!	ObjectEqualityMap(in initialCapacity : int)
    super(initialCapacity);
    propertyChangeSupport = new SinglePropertyChangeSupport(this);
!!!398087.java!!!	ObjectEqualityMap(in initialCapacity : int, in loadFactor : float)
    super(initialCapacity, loadFactor);
    propertyChangeSupport = new SinglePropertyChangeSupport(this);
!!!398215.java!!!	ObjectEqualityMap(inout m : Map<? extends K, ? extends V>)
    super(m);
    propertyChangeSupport = new SinglePropertyChangeSupport(this);
!!!398343.java!!!	addPropertyChangeListener(inout listener : PropertyChangeListener) : void
    propertyChangeSupport.addPropertyChangeListener(listener);
!!!398471.java!!!	addPropertyChangeListener(in propertyName : String, inout listener : PropertyChangeListener) : void
    propertyChangeSupport.addPropertyChangeListener(propertyName, listener);
!!!398599.java!!!	equals(inout o : Object) : boolean
    return this == o;
!!!398727.java!!!	hashCode() : int
    return super.hashCode();
!!!398855.java!!!	put(inout key : K, inout value : V) : V
    Object oldValue = get(key);
    if (oldValue instanceof Collection) {
      oldValue = new ArrayList<Object>((Collection<?>) oldValue) {

        private static final long serialVersionUID = 7466229820747338355L;

        /**
         * {@inheritDoc}
         */
        @Override
        public boolean equals(Object o) {
          return this == o;
        }

        /**
         * {@inheritDoc}
         */
        @Override
        public int hashCode() {
          return super.hashCode();
        }
      };
    }
    V putVal = super.put(key, value);
    propertyChangeSupport.firePropertyChange(key.toString(), oldValue, value);
    return putVal;
!!!398983.java!!!	removePropertyChangeListener(inout listener : PropertyChangeListener) : void
    propertyChangeSupport.removePropertyChangeListener(listener);
!!!399111.java!!!	removePropertyChangeListener(in propertyName : String, inout listener : PropertyChangeListener) : void
    propertyChangeSupport.removePropertyChangeListener(propertyName, listener);
!!!399239.java!!!	readObject(inout in : ObjectInputStream) : void
    in.defaultReadObject();
    propertyChangeSupport = new SinglePropertyChangeSupport(this);
