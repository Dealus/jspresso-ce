class SecurityHelper
!!!423687.java!!!	SecurityHelper()

    // private constructor for helper class
!!!423815.java!!!	checkAccess(inout subject : Subject, inout securable : ISecurable, inout translationProvider : ITranslationProvider, inout locale : Locale) : void

    Collection<String> grantedRoles = securable.getGrantedRoles();
    if (grantedRoles == null) {
      return;
    }
    Group subjectRoles = null;
    for (Principal p : subject.getPrincipals()) {
      if (p instanceof Group && ROLES_GROUP_NAME.equalsIgnoreCase(p.getName())) {
        subjectRoles = (Group) p;
      }
    }
    if (subjectRoles != null) {
      for (String grantedRole : grantedRoles) {
        if (subjectRoles.isMember(new SimplePrincipal(grantedRole))) {
          return;
        }
      }
    }
    if (securable instanceof IDescriptor) {
      throw new SecurityException(translationProvider.getTranslation(
          "access.denied.object", new Object[] {((IDescriptor) securable)
              .getI18nName(translationProvider, locale)}, locale));
    }
    throw new SecurityException(translationProvider.getTranslation(
        "access.denied", locale));
!!!423943.java!!!	createAnonymousSubject() : Subject

    Subject anonymousSubject = new Subject();
    UserPrincipal userPrincipal = new UserPrincipal(ANONYMOUS_USER_NAME);
    if (!anonymousSubject.getPrincipals().contains(userPrincipal)) {
      anonymousSubject.getPrincipals().add(userPrincipal);
    }
    return anonymousSubject;
